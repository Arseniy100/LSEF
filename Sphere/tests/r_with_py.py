# -*- coding: utf-8 -*-
"""
Created on Fri Jan 22 15:21:09 2021
Last modified: Jan 2021

@author: Arseniy Sotskiy
"""

import numpy as np
import matplotlib.pyplot as plt

import rpy2

from functions.tools import draw_1D
print(rpy2.__version__)

from rpy2.rinterface import R_VERSION_BUILD
print(R_VERSION_BUILD)


import rpy2.robjects as robjects

from rpy2.robjects.packages import importr
# import R's "base" package
base = importr('base')

# import R's "utils" package
utils = importr('utils')

#%%

robjects.r('''
        print("Hello World!")
        # create a function 'f'
        f <- function(r, verbose=TRUE) {
            if (verbose) {
                message("I am calling f().\n")
            }
            message(1)
            2 * pi * r
        }
        # call the function 'f' with argument value 3
        f(3)
        ''')

robjects.r('''
        # create a function 'f'
        g <- function(r, verbose=TRUE) {
            if (verbose) {
                print("I am calling f().\n")
            }
            print(r+2)
            r + 2
        }
        # call the function 'f' with argument value 3
        f(3)
        ''')

#%%
r_f = robjects.globalenv['f']
r_g = robjects.globalenv['g']
print(r_g.r_repr())
print(r_f(3, verbose=True) + r_g(3, verbose=True))
print(np.array(r_g(3, verbose=True) + r_g(3, verbose=True)))

#%%

from functions.R_progs import LinIntpl_R, fitScaleMagn_R, V2b_shape_S2_R
import rpy2.robjects.numpy2ri
rpy2.robjects.numpy2ri.activate()

# robjects.r(LinIntrpl_R)
# robjects.r(fitScaleMagn_R)
# robjects.r(V2b_shape_R)

robjects.r('''
dev.new()
plot(c(1,2,3,4,5), c(1,2,3,4,5), main="f_tofit (blue), f_fit (red)",
        type="l", col="blue", xlab="x")
par(new=TRUE)
lines(c(1,2,3,4,5), c(2,3,4,5,6), col="red")#, xaxt='n')#, ann=FALSE)
''')

# xx_f_vec = np.array([0, 5, 10])
# f_vec = np.array([0, 15, 20])
# xx_intpl = np.arange(10)

# LinIntrpl = robjects.globalenv['LinIntpl']
# fitScaleMagn = robjects.globalenv['fitScaleMagn']
# V2b_shape = robjects.globalenv['V2b_shape']


# print(np.array(LinIntrpl(xx_f_vec, f_vec, xx_intpl)))

#%%

from functions.R_progs import V2b_shape_S2

b_tofit = '0.4524591 0.4322643 0.4122971 0.3925682 0.3730892 0.353872 0.3349297 0.3162759 0.2979252 0.2798931 0.2628524 0.2461265 0.2295024 0.2129931 0.1966144 0.1803846 0.1643258 0.1484649 0.1328342 0.1180148 0.1122206 0.1064292 0.1006409 0.09485659 0.08907686 0.08330276 0.07753562 0.07177719 0.06602991 0.0602972 0.05464919 0.04921956 0.04387705 0.03863702 0.0335186 0.02854586 0.02374947 0.01916896 0.01485595 0.01087853 0.007327126 0.00432113 0.002607731 0.00241339 0.002219519 0.002026215 0.001833608 0.001641864 0.001451214 0.001261973 0.001074592 8.897384e-04 7.084399e-04 5.323658e-04 3.644162e-04 2.316616e-04 2.351967e-04 2.397204e-04 2.454736e-04 2.527806e-04 2.620862e-04 2.74017e-04 2.894809e-04 3.098388e-04 3.372156e-04 3.750958e-04 4.295533e-04 5.120281e-04 6.463748e-04 8.898071e-04 9.449624e-04 8.983861e-04 8.519394e-04 8.056372e-04 7.594967e-04 7.135377e-04 6.677838e-04 6.222626e-04 5.770069e-04 5.320562e-04 4.87458e-04 4.432705e-04 3.995653e-04 3.564319e-04 3.139837e-04 2.769851e-04 2.657558e-04 2.545367e-04 2.433289e-04 2.321336e-04 2.209523e-04 2.097867e-04 1.986388e-04 1.87511e-04 1.764061e-04 1.653273e-04 1.542788e-04 1.432655e-04 1.322932e-04 1.213695e-04 1.105037e-04 9.970768e-05 9.131594e-05 8.744172e-05 8.357504e-05 7.971667e-05 7.586748e-05 7.202848e-05 6.820081e-05 6.438581e-05 6.058502e-05 5.680025e-05 5.303362e-05 4.928766e-05 4.556536e-05 4.187035e-05 3.8207e-05 3.458069e-05 3.099805e-05 2.746739e-05 2.52445e-05 2.577614e-05 2.634675e-05 2.696023e-05 2.762095e-05 2.833391e-05 2.91048e-05 2.994014e-05 3.084742e-05 3.183529e-05 3.291378e-05 3.409459e-05 3.539143e-05 3.682047e-05 3.840086e-05 4.015549e-05 4.211186e-05 4.430332e-05 4.677057e-05 4.921144e-05 4.829695e-05 4.738468e-05 4.647482e-05 4.55676e-05 4.466327e-05 4.376212e-05 4.286447e-05 4.19707e-05 4.108123e-05 4.019656e-05 3.931724e-05 3.844395e-05 3.757747e-05 3.67187e-05 3.586874e-05 3.502888e-05 3.420072e-05 3.338615e-05 3.258755e-05 3.180786e-05 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'
b_tofit = np.array([float(a) for a in b_tofit.split()])
b_tofit_ = np.array([b_tofit]*(2))
# b_tofit_ = b_tofit.reshape(1,181)
print(b_tofit_.shape)
#%
b_shape = '1 0.9937265 0.9752002 0.9452761 0.9052921 0.8569513 0.8021822 0.7429937 0.6813421 0.6190223 0.5575898 0.4983157 0.4421717 0.3898394 0.3417383 0.298063 0.2588266 0.2239036 0.193069 0.1660327 0.142468 0.1220335 0.1043895 0.08920981 0.07618896 0.06504685 0.05553061 0.04741489 0.04050097 0.03461514 0.02960657 0.02534508 0.02171885 0.01863222 0.01600357 0.01376345 0.01185291 0.01022195 0.008828211 0.007635864 0.006614582 0.005738718 0.004986577 0.004339801 0.003782852 0.003302568 0.002887796 0.002529073 0.002218365 0.001948844 0.001714702 0.00151099 0.00133349 0.001178598 0.001043235 9.247654e-04 8.209288e-04 7.297864e-04 6.496715e-04 5.791501e-04 5.169862e-04 4.621134e-04 4.136102e-04 3.706792e-04 3.326296e-04 2.988619e-04 2.688553e-04 2.421568e-04 2.183717e-04 1.971558e-04 1.782083e-04 1.612664e-04 1.460998e-04 1.325065e-04 1.203094e-04 1.093525e-04 9.949893e-05 9.062774e-05 8.263238e-05 7.541872e-05 6.890353e-05 6.30131e-05 5.768213e-05 5.285267e-05 4.847325e-05 4.449808e-05 4.088641e-05 3.760194e-05 3.461227e-05 3.188846e-05 2.940467e-05 2.713774e-05 2.506695e-05 2.317371e-05 2.144135e-05 1.98549e-05 1.840086e-05 1.706714e-05 1.584279e-05 1.471799e-05 1.368384e-05 1.273232e-05 1.185619e-05 1.104886e-05 1.030442e-05 9.617459e-06 8.983109e-06 8.396935e-06 7.854909e-06 7.353373e-06 6.888995e-06 6.458745e-06 6.05986e-06 5.689821e-06 5.34633e-06 5.027289e-06 4.730781e-06 4.455051e-06 4.198496e-06 3.959646e-06 3.737156e-06 3.529791e-06 3.33642e-06 3.156004e-06 2.987588e-06 2.830294e-06 2.683317e-06 2.545912e-06 2.417397e-06 2.297141e-06 2.184565e-06 2.079132e-06 1.980349e-06 1.887759e-06 1.80094e-06 1.719504e-06 1.643091e-06 1.571366e-06 1.504022e-06 1.440773e-06 1.381354e-06 1.325521e-06 1.273046e-06 1.223719e-06 1.177343e-06 1.133739e-06 1.092736e-06 1.054179e-06 1.017923e-06 9.838326e-07 9.517824e-07 9.216562e-07 8.933457e-07 8.667504e-07 8.41777e-07 8.183386e-07 7.963548e-07 7.757508e-07 7.564571e-07 7.384095e-07 7.215482e-07 7.058181e-07 6.911682e-07 6.775512e-07 6.649238e-07 6.532458e-07 6.424805e-07 6.325944e-07 6.235567e-07 6.153395e-07 6.079177e-07 6.012686e-07 5.953719e-07 5.902099e-07 5.85767e-07 5.820298e-07 5.789873e-07 5.766301e-07 5.749515e-07 5.739463e-07 5.736115e-07'
b_shape = np.array([float(a) for a in b_shape.split()])

b_fit = '0.3825815 0.3808172 0.3768487 0.3707432 0.3623275 0.3513119 0.3387543 0.3248008 0.3093978 0.2929534 0.2759767 0.2586161 0.2410895 0.2237518 0.2067154 0.1900772 0.1742875 0.1592221 0.1448796 0.1313519 0.1190128 0.107472 0.09672154 0.08689995 0.07808314 0.06995991 0.0625059 0.05587866 0.04994937 0.04454185 0.0396297 0.03536063 0.03152368 0.02804741 0.02491386 0.02223344 0.01980554 0.01761447 0.01567003 0.01398869 0.01246897 0.01110014 0.009901657 0.00885126 0.007902533 0.007048392 0.00630912 0.005651561 0.005057471 0.004522287 0.004063602 0.003649397 0.003274781 0.00293945 0.002649631 0.00238636 0.002147875 0.001936346 0.001750447 0.001581297 0.001427772 0.001292699 0.001172068 0.001062094 9.620608e-04 8.746786e-04 7.954367e-04 7.230447e-04 6.571956e-04 5.997509e-04 5.470427e-04 4.987849e-04 4.552238e-04 4.16611e-04 3.811106e-04 3.485344e-04 3.193319e-04 2.930563e-04 2.68849e-04 2.465854e-04 2.267523e-04 2.086557e-04 1.91949e-04 1.765492e-04 1.629084e-04 1.502983e-04 1.386328e-04 1.279319e-04 1.183594e-04 1.094726e-04 1.01235e-04 9.372639e-05 8.691914e-05 8.0588e-05 7.47076e-05 6.937891e-05 6.448726e-05 5.992954e-05 5.568809e-05 5.186518e-05 4.831467e-05 4.50007e-05 4.191925e-05 3.913971e-05 3.653781e-05 3.410507e-05 3.185649e-05 2.980401e-05 2.78797e-05 2.607749e-05 2.442089e-05 2.289188e-05 2.145617e-05 2.010937e-05 1.887772e-05 1.772904e-05 1.664885e-05 1.563396e-05 1.471025e-05 1.384033e-05 1.302109e-05 1.225506e-05 1.155167e-05 1.088776e-05 1.026166e-05 9.679276e-06 9.139189e-06 8.62876e-06 8.146739e-06 7.700571e-06 7.282926e-06 6.887721e-06 6.514019e-06 6.16969e-06 5.844531e-06 5.536468e-06 5.245629e-06 4.977194e-06 4.722392e-06 4.480701e-06 4.253653e-06 4.042219e-06 3.841304e-06 3.650508e-06 3.472107e-06 3.30457e-06 3.1452e-06 2.993687e-06 2.852637e-06 2.719121e-06 2.591981e-06 2.470981e-06 2.3588e-06 2.25181e-06 2.149828e-06 2.053226e-06 1.962944e-06 1.876758e-06 1.794529e-06 1.716984e-06 1.643957e-06 1.574183e-06 1.50755e-06 1.444977e-06 1.385625e-06 1.328867e-06 1.274617e-06 1.223877e-06 1.175418e-06 1.129041e-06 1.084804e-06 1.043338e-06 1.003604e-06 9.655471e-07 9.29404e-07 8.952913e-07 8.625805e-07 8.31228e-07 8.015766e-07 7.73408e-07 7.463801e-07'
b_fit = np.array([float(a) for a in b_fit.split()])


shape = V2b_shape_S2(b_tofit_, b_shape, '12')
b_fitted = np.array(shape[0]).reshape(2, -1)
print(b_fitted)

plt.figure()
plt.plot(b_fitted[0,:], label='fitted with R', color='red')
# plt.plot(b_fitted[1,:])
plt.scatter(np.arange(len(b_shape)), b_fit, label='b_fit')
plt.legend(loc='best')
plt.grid()
plt.show()

print(np.max(np.abs(b_fitted[0,:] - b_fit)))
argm = np.argmax(np.abs(b_fitted[0,:] - b_fit))
print(b_fitted[0,:][argm], b_fit[argm])


#%%
from functions.R_progs import CreateExpqBands_R

bands = \
CreateExpqBands_R(
    nmax=60,
    nband=6,
    halfwidth_min=6,
    nc2=4,
    halfwidth_max=30,
    q_tranfu=2,
    rectang = False
    )

bands

print('''> hhwidth
[1]  6  8 11 15 21 30''')
print(bands[2], '\n')

print('''> band_centers_n
[1]  0  4 11 21 37 60''')
print(bands[3])

tranfu = '''
  [1,] 1.000000e+00 7.788008e-01 3.678794e-01 1.408584e-01 4.485553e-02 0.01831564
  [2,] 9.726045e-01 8.688151e-01 4.376016e-01 1.690133e-01 5.293050e-02 0.02090477
  [3,] 8.948393e-01 9.394131e-01 5.120047e-01 2.010012e-01 6.217652e-02 0.02380695
  [4,] 7.788008e-01 9.844964e-01 5.892377e-01 2.369278e-01 7.270718e-02 0.02705185
  [5,] 6.411804e-01 1.000000e+00 6.670044e-01 2.768043e-01 8.463666e-02 0.03067079
  [6,] 4.993518e-01 9.844964e-01 7.426572e-01 3.205305e-01 9.807768e-02 0.03469669
  [7,] 3.678794e-01 9.394131e-01 8.133355e-01 3.678794e-01 1.131390e-01 0.03916390
  [8,] 2.563758e-01 8.688151e-01 8.761382e-01 4.184863e-01 1.299226e-01 0.04410813
  [9,] 1.690133e-01 7.788008e-01 9.283187e-01 4.718420e-01 1.485209e-01 0.04956628
 [10,] 1.053992e-01 6.766338e-01 9.674826e-01 5.272924e-01 1.690133e-01 0.05557621
 [11,] 6.217652e-02 5.697828e-01 9.917696e-01 5.840447e-01 1.914629e-01 0.06217652
 [12,] 3.469669e-02 4.650432e-01 1.000000e+00 6.411804e-01 2.159130e-01 0.06940629
 [13,] 1.831564e-02 3.678794e-01 9.917696e-01 6.976763e-01 2.423836e-01 0.07730474
 [14,] 9.145947e-03 2.820630e-01 9.674826e-01 7.524322e-01 2.708683e-01 0.08591091
 [15,] 4.320239e-03 2.096114e-01 9.283187e-01 8.043042e-01 3.013308e-01 0.09526326
 [16,] 1.930454e-03 1.509774e-01 8.761382e-01 8.521438e-01 3.337024e-01 0.10539922
 [17,] 8.159878e-04 1.053992e-01 8.133355e-01 8.948393e-01 3.678794e-01 0.11635480
 [18,] 3.262725e-04 7.131668e-02 7.426572e-01 9.313584e-01 4.037217e-01 0.12816402
 [19,] 1.234098e-04 4.677062e-02 6.670044e-01 9.607894e-01 4.410513e-01 0.14085842
 [20,] 4.415617e-05 2.972922e-02 5.892377e-01 9.823793e-01 4.796523e-01 0.15446654
 [21,] 1.494534e-05 1.831564e-02 5.120047e-01 9.955654e-01 5.192713e-01 0.16901332
 [22,] 4.785117e-06 1.093677e-02 4.376016e-01 1.000000e+00 5.596191e-01 0.18451952
 [23,] 1.449279e-06 6.329715e-03 3.678794e-01 9.955654e-01 6.003730e-01 0.20100119
 [24,] 4.152254e-07 3.550649e-03 3.041961e-01 9.823793e-01 6.411804e-01 0.21846901
 [25,] 1.125352e-07 1.930454e-03 2.474135e-01 9.607894e-01 6.816629e-01 0.23692776
 [26,] 2.885129e-08 1.017278e-03 1.979314e-01 9.313584e-01 7.214223e-01 0.25637576
 [27,] 6.997046e-09 5.195747e-04 1.557498e-01 8.948393e-01 7.600459e-01 0.27680432
 [28,] 1.605228e-09 2.572081e-04 1.205486e-01 8.521438e-01 7.971142e-01 0.29819728
 [29,] 3.483624e-10 1.234098e-04 9.177368e-02 8.043042e-01 8.322075e-01 0.32053052
 [30,] 7.151520e-11 5.739089e-05 6.872200e-02 7.524322e-01 8.649144e-01 0.34377161
 [31,] 1.388794e-11 2.586810e-05 5.061683e-02 6.976763e-01 8.948393e-01 0.36787944
 [32,] 2.551233e-12 1.130094e-05 3.667041e-02 6.411804e-01 9.216104e-01 0.39280403
 [33,] 4.433378e-13 4.785117e-06 2.613113e-02 5.840447e-01 9.448876e-01 0.41848631
 [34,] 7.287724e-14 1.963808e-06 1.831564e-02 5.272924e-01 9.643691e-01 0.44485807
 [35,] 1.133239e-14 7.811489e-07 1.262722e-02 4.718420e-01 9.797987e-01 0.47184199
 [36,] 1.666955e-15 3.011597e-07 8.562778e-03 4.184863e-01 9.909707e-01 0.49935179
 [37,] 2.319523e-16 1.125352e-07 5.711411e-03 3.678794e-01 9.977350e-01 0.52729242
 [38,] 3.053135e-17 4.075754e-08 3.747086e-03 3.205305e-01 1.000000e+00 0.55556049
 [39,] 3.801594e-18 1.430724e-08 2.418051e-03 2.768043e-01 9.977350e-01 0.58404469
 [40,] 4.477732e-19 4.867794e-09 1.534825e-03 2.369278e-01 9.909707e-01 0.61262639
 [41,] 4.989109e-20 1.605228e-09 9.582391e-04 2.010012e-01 9.797987e-01 0.64118039
 [42,] 5.258483e-21 5.130617e-10 5.884512e-04 1.690133e-01 9.643691e-01 0.66957566
 [43,] 5.242886e-22 1.589391e-10 3.554419e-04 1.408584e-01 9.448876e-01 0.69767633
 [44,] 4.944847e-23 4.772217e-11 2.111778e-04 1.163548e-01 9.216104e-01 0.72534265
 [45,] 4.411719e-24 1.388794e-11 1.234098e-04 9.526326e-02 8.948393e-01 0.75243216
 [46,] 3.723363e-25 3.917274e-12 7.093696e-05 7.730474e-02 8.649144e-01 0.77880078
 [47,] 2.972593e-26 1.070923e-12 4.010671e-05 6.217652e-02 8.322075e-01 0.80430416
 [48,] 2.244957e-27 2.837664e-13 2.230402e-05 4.956628e-02 7.971142e-01 0.82879886
 [49,] 1.603811e-28 7.287724e-14 1.220031e-05 3.916390e-02 7.600459e-01 0.85214379
 [50,] 1.083854e-29 1.814058e-14 6.564171e-06 3.067079e-02 7.214223e-01 0.87420144
 [51,] 6.928847e-31 4.376619e-15 3.473847e-06 2.380695e-02 6.816629e-01 0.89483932
 [52,] 4.190093e-32 1.023421e-15 1.808269e-06 1.831564e-02 6.411804e-01 0.91393119
 [53,] 2.396950e-33 2.319523e-16 9.258422e-07 1.396626e-02 6.003730e-01 0.93135840
 [54,] 1.297080e-34 5.095315e-17 4.662647e-07 1.055547e-02 5.596191e-01 0.94701112
 [55,] 6.639677e-36 1.084855e-17 2.309668e-07 7.907054e-03 5.192713e-01 0.96078944
 [56,] 3.215139e-37 2.238725e-18 1.125352e-07 5.870721e-03 4.796523e-01 0.97260448
 [57,] 1.472737e-38 4.477732e-19 5.393225e-08 4.320239e-03 4.410513e-01 0.98237931
 [58,] 6.381503e-40 8.680480e-20 2.542321e-08 3.151112e-03 4.037217e-01 0.99004983
 [59,] 2.615733e-41 1.631014e-20 1.178783e-08 2.278030e-03 3.678794e-01 0.99556542
 [60,] 1.014230e-42 2.970297e-21 5.375994e-09 1.632279e-03 3.337024e-01 0.99888951
 [61,] 3.720076e-44 5.242886e-22 2.411600e-09 1.159229e-03 3.013308e-01 1.00000000
 [62,] 1.014230e-42 8.969520e-23 1.064078e-09 8.159878e-04 2.708683e-01 0.99888951
 [63,] 2.615733e-41 1.487292e-23 4.618099e-10 5.692954e-04 2.423836e-01 0.99556542
 [64,] 6.381503e-40 2.390296e-24 1.971399e-10 3.936690e-04 2.159130e-01 0.99004983
 [65,] 1.472737e-38 3.723363e-25 8.277657e-11 2.698140e-04 1.914629e-01 0.98237931
 [66,] 3.215139e-37 2.390296e-24 3.418707e-11 1.832894e-04 1.690133e-01 0.97260448
 [67,] 6.639677e-36 1.487292e-23 1.388794e-11 1.234098e-04 1.485209e-01 0.96078944
 [68,] 1.297080e-34 8.969520e-23 5.549266e-12 8.235722e-05 1.299226e-01 0.94701112
 [69,] 2.396950e-33 5.242886e-22 2.180996e-12 5.447450e-05 1.131390e-01 0.93135840
 [70,] 4.190093e-32 2.970297e-21 8.431320e-13 3.571285e-05 9.807768e-02 0.91393119
 [71,] 6.928847e-31 1.631014e-20 3.205959e-13 2.320574e-05 8.463666e-02 0.89483932
 [72,] 1.083854e-29 8.680480e-20 1.199063e-13 1.494534e-05 7.270718e-02 0.87420144
 [73,] 1.603811e-28 4.477732e-19 3.205959e-13 9.540163e-06 6.217652e-02 0.85214379
 [74,] 2.244957e-27 2.238725e-18 8.431320e-13 6.035947e-06 5.293050e-02 0.82879886
 [75,] 2.972593e-26 1.084855e-17 2.180996e-12 3.785077e-06 4.485553e-02 0.80430416
 [76,] 3.723363e-25 5.095315e-17 5.549266e-12 2.352575e-06 3.784046e-02 0.77880078
 [77,] 4.411719e-24 2.319523e-16 1.388794e-11 1.449279e-06 3.177805e-02 0.75243216
 [78,] 4.944847e-23 1.023421e-15 3.418707e-11 8.849119e-07 2.656614e-02 0.72534265
 [79,] 5.242886e-22 4.376619e-15 8.277657e-11 5.355348e-07 2.210854e-02 0.69767633
 [80,] 5.258483e-21 1.814058e-14 1.971399e-10 3.212291e-07 1.831564e-02 0.66957566
 [81,] 4.989109e-20 7.287724e-14 4.618099e-10 1.909773e-07 1.510478e-02 0.64118039
 [82,] 4.477732e-19 2.837664e-13 1.064078e-09 1.125352e-07 1.240045e-02 0.61262639
 [83,] 3.801594e-18 1.070923e-12 2.411600e-09 1.909773e-07 1.013423e-02 0.58404469
 [84,] 3.053135e-17 3.917274e-12 5.375994e-09 3.212291e-07 8.244690e-03 0.55556049
 [85,] 2.319523e-16 1.388794e-11 1.178783e-08 5.355348e-07 6.677108e-03 0.52729242
 [86,] 1.666955e-15 4.772217e-11 2.542321e-08 8.849119e-07 5.383106e-03 0.49935179
 [87,] 1.133239e-14 1.589391e-10 5.393225e-08 1.449279e-06 4.320239e-03 0.47184199
 [88,] 7.287724e-14 5.130617e-10 1.125352e-07 2.352575e-06 3.451542e-03 0.44485807
 [89,] 4.433378e-13 1.605228e-09 2.309668e-07 3.785077e-06 2.745041e-03 0.41848631
 [90,] 2.551233e-12 4.867794e-09 4.662647e-07 6.035947e-06 2.173277e-03 0.39280403
 [91,] 1.388794e-11 1.430724e-08 9.258422e-07 9.540163e-06 1.712819e-03 0.36787944
 [92,] 7.151520e-11 4.075754e-08 1.808269e-06 1.494534e-05 1.343812e-03 0.34377161
 [93,] 3.483624e-10 1.125352e-07 3.473847e-06 2.320574e-05 1.049533e-03 0.32053052
 [94,] 1.605228e-09 3.011597e-07 6.564171e-06 3.571285e-05 8.159878e-04 0.29819728
 [95,] 6.997046e-09 7.811489e-07 1.220031e-05 5.447450e-05 6.315415e-04 0.27680432
 [96,] 2.885129e-08 1.963808e-06 2.230402e-05 8.235722e-05 4.865758e-04 0.25637576
 [97,] 1.125352e-07 4.785117e-06 4.010671e-05 1.234098e-04 3.731896e-04 0.23692776
 [98,] 4.152254e-07 1.130094e-05 7.093696e-05 1.832894e-04 2.849305e-04 0.21846901
 [99,] 1.449279e-06 2.586810e-05 1.234098e-04 2.698140e-04 3.731896e-04 0.20100119
[100,] 4.785117e-06 5.739089e-05 2.111778e-04 3.936690e-04 4.865758e-04 0.18451952
[101,] 1.494534e-05 1.234098e-04 3.554419e-04 5.692954e-04 6.315415e-04 0.16901332
[102,] 4.415617e-05 2.572081e-04 5.884512e-04 8.159878e-04 8.159878e-04 0.15446654
[103,] 1.234098e-04 5.195747e-04 9.582391e-04 1.159229e-03 1.049533e-03 0.14085842
[104,] 3.262725e-04 1.017278e-03 1.534825e-03 1.632279e-03 1.343812e-03 0.12816402
[105,] 8.159878e-04 1.930454e-03 2.418051e-03 2.278030e-03 1.712819e-03 0.11635480
[106,] 1.930454e-03 3.550649e-03 3.747086e-03 3.151112e-03 2.173277e-03 0.10539922
[107,] 4.320239e-03 6.329715e-03 5.711411e-03 4.320239e-03 2.745041e-03 0.09526326
[108,] 9.145947e-03 1.093677e-02 8.562778e-03 5.870721e-03 3.451542e-03 0.08591091
[109,] 1.831564e-02 1.831564e-02 1.262722e-02 7.907054e-03 4.320239e-03 0.07730474
[110,] 3.469669e-02 2.972922e-02 1.831564e-02 1.055547e-02 5.383106e-03 0.06940629
[111,] 6.217652e-02 4.677062e-02 2.613113e-02 1.396626e-02 6.677108e-03 0.06217652
[112,] 1.053992e-01 7.131668e-02 3.667041e-02 1.831564e-02 8.244690e-03 0.05557621
[113,] 1.690133e-01 1.053992e-01 5.061683e-02 2.380695e-02 1.013423e-02 0.04956628
[114,] 2.563758e-01 1.509774e-01 6.872200e-02 3.067079e-02 1.240045e-02 0.04410813
[115,] 3.678794e-01 2.096114e-01 9.177368e-02 3.916390e-02 1.510478e-02 0.03916390
[116,] 4.993518e-01 2.820630e-01 1.205486e-01 4.956628e-02 1.831564e-02 0.03469669
[117,] 6.411804e-01 3.678794e-01 1.557498e-01 6.217652e-02 2.210854e-02 0.03067079
[118,] 7.788008e-01 4.650432e-01 1.979314e-01 7.730474e-02 2.656614e-02 0.02705185
[119,] 8.948393e-01 5.697828e-01 2.474135e-01 9.526326e-02 3.177805e-02 0.02380695
[120,] 9.726045e-01 6.766338e-01 3.041961e-01 1.163548e-01 3.784046e-02 0.02090477
'''.split()

tranfu = np.array(tranfu).reshape((120,-1))[:,1:].astype(np.float)

print('max difference:',
      np.max(np.abs(np.array(bands[0]) - tranfu)))



#%%
from functions.R_progs import V2E_shape_S2

moments = "012"
a_max_times = 10
w_a_fg = 0.2

E_tofit = np.array([float(i) for i in
'''
5.322308e-01  5.176836e-01  4.776877e-01  4.216351e-01  3.608868e-01  3.047672e-01  2.581945e-01
2.216428e-01  1.928194e-01  1.687864e-01  1.474542e-01  1.280448e-01  1.107472e-01  9.606672e-02
8.429695e-02  7.530634e-02  6.860499e-02  6.354733e-02  5.952608e-02  5.607812e-02  5.289452e-02
4.977258e-02  4.655790e-02  4.311003e-02  3.930174e-02  3.504285e-02  3.031079e-02  2.517075e-02
1.977630e-02  1.434946e-02  9.146716e-03  4.420015e-03  3.819846e-04 -2.818648e-03 -5.108757e-03
-6.490346e-03 -7.030666e-03 -6.846610e-03 -6.086868e-03 -4.914600e-03 -3.492405e-03 -1.970496e-03
-4.783373e-04  8.804275e-04  2.030157e-03  2.922999e-03  3.536828e-03  3.871868e-03  3.946512e-03
 3.792779e-03  3.451791e-03  2.969565e-03  2.393318e-03  1.768414e-03  1.136000e-03  5.313376e-04
 -1.722038e-05 -4.886662e-04 -8.692827e-04 -1.152189e-03 -1.336593e-03 -1.426835e-03 -1.431340e-03
-1.361523e-03 -1.230744e-03 -1.053344e-03 -8.438006e-04 -6.160241e-04 -3.828045e-04 -1.554008e-04
 5.672909e-05  2.460737e-04  4.071053e-04  5.362251e-04  6.316360e-04  6.931592e-04  7.220135e-04
 7.205708e-04  6.921026e-04  6.405295e-04  5.701822e-04  4.855832e-04  3.912519e-04  2.915395e-04
 1.904931e-04  9.175020e-05 -1.537402e-06 -8.675208e-05 -1.618340e-04 -2.252823e-04 -2.761380e-04
-3.139503e-04 -3.387314e-04 -3.509021e-04 -3.512310e-04 -3.407711e-04 -3.207951e-04 -2.927320e-04
-2.581075e-04 -2.184884e-04 -1.754325e-04 -1.304451e-04 -8.494234e-05 -4.022121e-05  2.563683e-06
 4.241652e-05  7.851059e-05  1.101929e-04  1.369838e-04  1.585720e-04  1.748060e-04  1.856821e-04
 1.913305e-04  1.919988e-04  1.880356e-04  1.798719e-04  1.680034e-04  1.529731e-04  1.353543e-04
 1.157344e-04  9.470056e-05  7.282629e-05  5.066009e-05  2.871537e-05  7.462290e-06 -1.267873e-05
-3.134184e-05 -4.821902e-05 -6.306183e-05 -7.568175e-05 -8.594935e-05 -9.379232e-05 -9.919249e-05
-1.021822e-04 -1.028397e-04 -1.012844e-04 -9.767187e-05 -9.218763e-05 -8.504212e-05 -7.646484e-05
-6.669884e-05 -5.599536e-05 -4.460876e-05 -3.279177e-05 -2.079109e-05 -8.843454e-06  2.827875e-06
 1.401613e-05  2.453360e-05  3.421368e-05  4.291247e-05  5.050990e-05  5.691044e-05  6.204330e-05
 6.586235e-05  6.834561e-05  6.949444e-05  6.933241e-05  6.790393e-05  6.527264e-05  6.151966e-05
 5.674162e-05  5.104862e-05  4.456209e-05  3.741260e-05  2.973766e-05  2.167945e-05  1.338272e-05
 4.992562e-06 -3.347567e-06 -1.149788e-05 -1.932410e-05 -2.669921e-05 -3.350506e-05 -3.963386e-05
-4.498944e-05 -4.948848e-05 -5.306141e-05 -5.565330e-05 -5.722444e-05 -5.775084e-05
'''.split()])
E_tofit_ = np.array([E_tofit]*(2))

draw_1D(E_tofit)


b_fit = np.array([float(i) for i in
'''
4.094106e-01 4.059070e-01 3.962363e-01 3.809511e-01 3.608756e-01 3.370218e-01 3.104957e-01
2.824052e-01 2.537826e-01 2.256224e-01 1.986614e-01 1.733974e-01 1.501611e-01 1.291322e-01
1.103660e-01 9.382169e-02 7.938912e-02 6.704943e-02 5.649333e-02 4.748713e-02 3.984289e-02
3.338266e-02 2.794253e-02 2.337472e-02 1.954822e-02 1.638310e-02 1.375013e-02 1.154736e-02
9.705164e-03 8.164646e-03 6.876168e-03 5.798054e-03 4.895415e-03 4.145776e-03 3.520643e-03
2.994377e-03 2.550812e-03 2.176473e-03 1.860129e-03 1.592416e-03 1.365527e-03 1.174210e-03
1.012743e-03 8.749387e-04 7.571440e-04 6.562948e-04 5.698163e-04 4.955428e-04 4.316504e-04
3.768491e-04 3.299517e-04 2.893365e-04 2.541080e-04 2.235051e-04 1.968804e-04 1.736822e-04
1.534394e-04 1.357985e-04 1.205017e-04 1.070736e-04 9.526953e-05 8.487898e-05 7.572033e-05
6.763682e-05 6.049288e-05 5.417920e-05 4.863963e-05 4.371846e-05 3.934134e-05 3.544347e-05
3.196830e-05 2.886640e-05 2.609450e-05 2.361480e-05 2.141659e-05 1.944342e-05 1.767040e-05
1.607556e-05 1.463953e-05 1.334519e-05 1.217739e-05 1.112273e-05 1.017734e-05 9.322039e-06
8.546653e-06 7.843082e-06 7.204102e-06 6.623274e-06 6.094847e-06 5.613681e-06 5.178157e-06
4.781422e-06 4.418973e-06 4.087586e-06 3.784362e-06 3.506693e-06 3.252232e-06 3.018866e-06
2.805845e-06 2.610624e-06 2.431071e-06 2.265815e-06 2.113613e-06 1.973340e-06 1.843977e-06
1.724597e-06 1.614823e-06 1.513694e-06 1.420139e-06 1.333538e-06 1.253329e-06 1.178999e-06
1.110078e-06 1.046138e-06 9.869760e-07 9.322340e-07 8.813448e-07 8.340155e-07 7.899774e-07
7.489842e-07 7.108099e-07 6.752471e-07 6.421804e-07 6.114864e-07 5.828512e-07 5.561297e-07
5.311883e-07 5.079040e-07 4.861636e-07 4.658625e-07 4.469328e-07 4.293437e-07 4.129135e-07
3.975682e-07 3.832394e-07 3.698639e-07 3.573835e-07 3.457444e-07 3.349057e-07 3.248734e-07
3.155380e-07 3.068611e-07 2.988078e-07 2.913458e-07 2.844453e-07 2.780791e-07 2.722226e-07
2.668984e-07 2.620367e-07 2.576190e-07 2.536286e-07 2.500507e-07 2.468717e-07 2.440800e-07
2.416652e-07 2.396501e-07 2.379979e-07 2.366989e-07 2.357483e-07 2.351428e-07 2.348426e-07
2.348426e-07 2.348426e-07 2.348426e-07 2.348426e-07 2.348426e-07 2.348426e-07 2.348426e-07
2.348426e-07 2.348426e-07 2.348426e-07 2.348426e-07 2.348426e-07 2.348426e-07 2.348426e-07
2.348426e-07 2.348426e-07 2.348426e-07 2.348426e-07 2.348426e-07 2.348426e-07
'''.split()])

draw_1D(b_fit)


e_shape_raw = \
'''  [1] 1.000000e+00 9.937265e-01 9.752002e-01 9.452761e-01 9.052921e-01 8.569513e-01
  [7] 8.021822e-01 7.429937e-01 6.813421e-01 6.190223e-01 5.575898e-01 4.983157e-01
 [13] 4.421717e-01 3.898394e-01 3.417383e-01 2.980630e-01 2.588266e-01 2.239036e-01
 [19] 1.930690e-01 1.660327e-01 1.424680e-01 1.220335e-01 1.043895e-01 8.920981e-02
 [25] 7.618896e-02 6.504685e-02 5.553061e-02 4.741489e-02 4.050097e-02 3.461514e-02
 [31] 2.960657e-02 2.534508e-02 2.171885e-02 1.863222e-02 1.600357e-02 1.376345e-02
 [37] 1.185291e-02 1.022195e-02 8.828211e-03 7.635864e-03 6.614582e-03 5.738718e-03
 [43] 4.986577e-03 4.339801e-03 3.782852e-03 3.302568e-03 2.887796e-03 2.529073e-03
 [49] 2.218365e-03 1.948844e-03 1.714702e-03 1.510990e-03 1.333490e-03 1.178598e-03
 [55] 1.043235e-03 9.247654e-04 8.209288e-04 7.297864e-04 6.496715e-04 5.791501e-04
 [61] 5.169862e-04 4.621134e-04 4.136102e-04 3.706792e-04 3.326296e-04 2.988619e-04
 [67] 2.688553e-04 2.421568e-04 2.183717e-04 1.971558e-04 1.782083e-04 1.612664e-04
 [73] 1.460998e-04 1.325065e-04 1.203094e-04 1.093525e-04 9.949893e-05 9.062774e-05
 [79] 8.263238e-05 7.541872e-05 6.890353e-05 6.301310e-05 5.768213e-05 5.285267e-05
 [85] 4.847325e-05 4.449808e-05 4.088641e-05 3.760194e-05 3.461227e-05 3.188846e-05
 [91] 2.940467e-05 2.713774e-05 2.506695e-05 2.317371e-05 2.144135e-05 1.985490e-05
 [97] 1.840086e-05 1.706714e-05 1.584279e-05 1.471799e-05 1.368384e-05 1.273232e-05
[103] 1.185619e-05 1.104886e-05 1.030442e-05 9.617459e-06 8.983109e-06 8.396935e-06
[109] 7.854909e-06 7.353373e-06 6.888995e-06 6.458745e-06 6.059860e-06 5.689821e-06
[115] 5.346330e-06 5.027289e-06 4.730781e-06 4.455051e-06 4.198496e-06 3.959646e-06
[121] 3.737156e-06 3.529791e-06 3.336420e-06 3.156004e-06 2.987588e-06 2.830294e-06
[127] 2.683317e-06 2.545912e-06 2.417397e-06 2.297141e-06 2.184565e-06 2.079132e-06
[133] 1.980349e-06 1.887759e-06 1.800940e-06 1.719504e-06 1.643091e-06 1.571366e-06
[139] 1.504022e-06 1.440773e-06 1.381354e-06 1.325521e-06 1.273046e-06 1.223719e-06
[145] 1.177343e-06 1.133739e-06 1.092736e-06 1.054179e-06 1.017923e-06 9.838326e-07
[151] 9.517824e-07 9.216562e-07 8.933457e-07 8.667504e-07 8.417770e-07 8.183386e-07
[157] 7.963548e-07 7.757508e-07 7.564571e-07 7.384095e-07 7.215482e-07 7.058181e-07
[163] 6.911682e-07 6.775512e-07 6.649238e-07 6.532458e-07 6.424805e-07 6.325944e-07
[169] 6.235567e-07 6.153395e-07 6.079177e-07 6.012686e-07 5.953719e-07 5.902099e-07
[175] 5.857670e-07 5.820298e-07 5.789873e-07 5.766301e-07 5.749515e-07 5.739463e-07
[181] 5.736115e-07'''
e_shape_raw = [s[5:] for s in e_shape_raw.split('\n')]
e_shape_medium = ''
for s in e_shape_raw:
    e_shape_medium += s
e_shape_medium



E_shape = np.array([float(i) for i in e_shape_medium.split()])

b = V2E_shape_S2(E_tofit_, E_shape, moments, a_max_times, w_a_fg)
E_pred = np.array(b[0])[0,:]


draw_1D(b_fit - E_pred,
        title=f'b_fit - E_pred, max={np.max(np.abs(b_fit - E_pred))}')



















#%%
plt.figure()
plt.plot(np.arange(60), tranfu[:60,:])
plt.show()

#%%
robjects.r('dev.off()')
